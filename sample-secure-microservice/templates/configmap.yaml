{{- if .Values.extConfig.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sample-secure-microservice.fullname" . }}
  labels:
    {{- include "sample-secure-microservice.labels" . | nindent 4 }}
data:
  application.yml: |-
    quarkus:
      rest-client:
        "com.example.remote.SampleRemoteService":
          url: {{ .Values.extConfig.remoteServiceUrl }}
      log:
        console:
          json: false          
{{- if not .Values.extConfig.security.oauth.enabled }}
      oidc-client:
        enabled: false
      keycloak:
        policy-enforcer:
          enable: false
      oidc:
        enabled: false
        auth-server-url: http://nullhost
{{- else if .Values.extConfig.security.oauth.enabled }}
      oidc:
        application-type: service
        client-id: {{ .Values.extConfig.security.oauth.clientId }}
        credentials:
          secret: {{ .Values.extConfig.security.oauth.clientSecret }}
        auth-server-url: {{ .Values.extConfig.security.oauth.authServerUrl }}
      http:
        auth:
          permission:
            authenticated:
              paths: {{ .Values.extConfig.security.authenticatedPaths }}
              policy: authenticated
              enabled: true
      oidc-client:
        credentials:
          secret: {{ .Values.extConfig.security.oauth.clientSecret }}
        client-id: {{ .Values.extConfig.security.oauth.clientId }}
        grant:
          type: client
        enabled: true
        early-tokens-acquisition: false
        auth-server-url: {{ .Values.extConfig.security.oauth.authServerUrl }}
      keycloak:
        policy-enforcer:
          enable: false
{{ end }}
{{- if .Values.extConfig.security.basic.enabled }}
      http:
        auth:
          permission:
            authenticated:
              paths: {{ .Values.extConfig.security.authenticatedPaths }}
              policy: authenticated
              enabled: true
      security:
        users:
          embedded:
            enabled: true
            plain-text: true
            users:
              admin: admin
            roles:
              admin: admin
    org:
      eclipse:
        microprofile:
          rest:
            client:
              propagateHeaders: Authorization
{{ end }}              
{{ end }}